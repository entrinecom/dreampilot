// Generated by CoffeeScript 1.12.7
var ModelApp,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

ModelApp = (function(superClass) {
  extend(ModelApp, superClass);

  function ModelApp() {
    return ModelApp.__super__.constructor.apply(this, arguments);
  }

  ModelApp.prototype.init = function() {
    return this.initModels();
  };

  ModelApp.prototype.initModels = function() {
    this.ff = new DreamPilot.Model({
      name: false,
      email: false
    });
    this.cart = new CartModel();
    this.cart.set({
      of_user1: new CartItemModel({
        id: 1,
        count: 2
      }),
      2: new CartItemModel({
        id: 2
      }),
      3: new CartItemModel({
        id: 3
      })
    });
    this.user1 = new UserModel(this.e('ul[data-user1]').data('user1'));
    this.user2 = new UserModel(this.e('script[data-of="user2"]').html());
    this.user3 = new UserModel(this.user2);
    this.user3.set({
      name: 'Lars Ulrich'
    });
    this.linkToScope('user1', 'user2', 'user3', 'cart', 'formSubmit', 'ff', 'onFocus', 'onBlur');
    console.log('(init) user1.name = ', this.getScope().get('user1.name'));
    this.user1.onChange('*', function(field, value) {
      return console.log('user1.' + field, '=', value);
    });
    return this;
  };

  ModelApp.prototype.formSubmit = function(event) {
    event.preventDefault();
    return alert('form submitted, login: ' + this.getScope().get('formLogin') + ', checkbox: ' + this.getScope().get('formCheckBox'));
  };

  ModelApp.prototype.onFocus = function(field) {
    this.ff.set(field, true);
    return this;
  };

  ModelApp.prototype.onBlur = function(field) {
    this.ff.set(field, false);
    return this;
  };

  return ModelApp;

})(DreamPilot.Application);

//# sourceMappingURL=ModelApp.js.map
